daemon off;
#Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections 1024;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;

    client_max_body_size 125m;

    server_tokens off;

    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log logs/nginx/access.log l2met;
    error_log logs/nginx/error.log;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    #Must read the body in 5 seconds.
    client_body_timeout 5;

    upstream app_server {
        server unix:/tmp/nginx.socket fail_timeout=0;
     }

    server {
        listen <%= ENV["PORT"] %>;
        server_name _;
        keepalive_timeout 5;

        <% if ENV.fetch('REQUIRE_CLOUDFLARE', 'false') != "false" %>
        # Allow for internal Heroku router - 10.x.x.x
        set_real_ip_from  10.0.0.0/8;
        real_ip_header  X-Forwarded-For;

        # https://www.cloudflare.com/ips
        allow 103.21.244.0/22;
        allow 103.22.200.0/22;
        allow 103.31.4.0/22;
        allow 104.16.0.0/12;
        allow 108.162.192.0/18;
        allow 141.101.64.0/18;
        allow 162.158.0.0/15;
        allow 172.64.0.0/13;
        allow 173.245.48.0/20;
        allow 188.114.96.0/20;
        allow 190.93.240.0/20;
        allow 197.234.240.0/22;
        allow 198.41.128.0/17;
        allow 199.27.128.0/21;

        deny all;
        <% end %>

        location / {
            <% if ENV.fetch('REQUIRE_CLOUDFLARE', 'false') != "false" %>
            proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
            proxy_set_header Host $http_cf_connecting_ip;
            <% else %>
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            <% end %>
            proxy_redirect off;
            proxy_pass http://app_server;
        }
    }
}
